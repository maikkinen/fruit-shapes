/*
 * global site styles
 * IMPORTANT: in CSS, the more specific rule takes over!
 */

html, body {
  margin: 0;
  padding: 0;
}

hp-content {
  display: flex;

  width: 100vw;
  height: 100vh;

  justify-content: center;
  align-items: center;
}

hp-presentation>hp-slide {
  display: none;
}

hp-presentation>hp-slide.active {
  display: inline-block;
}

hp-presentation {
  display: block;
  background-color: #fff;

  width: 80vmin;
  height: 80vmin;

  border: .2em solid #000;
  border-radius: 1em;
}

hp-slide {
  display: inline-block;

  width: 80%;
  height: 80%;

  margin: 10%;

  font-size: 8vmin;
  font-weight: bold;
  font-family: sans-serif;
  text-align: center;
}

hp-chooser {
  display: flex;
  width: 100%;

  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-around;
  align-items: center;
}

/* Why both parent and child need the class "chosen"?
 * Well, that's the core of css - cascading stylesheets, meaning that the
 * child inherits properties from its parent, not vice versa.
 * Concretely: you cannot manipulate parent, based on child element's change.
 */


 /* CSS animation baseline: 
  * set initial value for the desired property,
  * set final value, similarly.
  */
hp-chooser * {
  max-width: 20%;
  margin: 5% 2.5%;
  height: 20vmin; /* The elements inside shrink; this keeps the size of the chooser fixed.*/
}


/* Seems exotic? It says that when hp-chooser element is chosen, 
 * its child element that is chosen, will apply these rules.
 */
hp-chooser.chosen>*.chosen {
  max-width: 30%;
}

hp-chooser.chosen.animate>*.chosen {
  max-width: 30%;
  animation-name: chosen;
  animation-duration: .5s; /*Fancy way of writing 0.5*/
  animation-timing-function: ease-in-out;
  opacity: 1;
}

/* Way of controlling the pace of stuff happening.
 * Keyframes always has initial and final values.
 */
@keyframes chosen {
  from {
    max-width:  20%;
  }

  to {
    max-width: 30%;
  }
}

hp-chooser.chosen>*:not(.chosen) {
  max-width: 16.6%;
  opacity: .25;
}

hp-chooser.chosen.animate>*:not(.chosen) {
  animation-name: unchosen;
  animation-duration: .5s;
  animation-timing-function: linear;
}

@keyframes unchosen {
  from {
    max-width: 20%;
    opacity: 1;
  }

  to {
    max-width: 16.6%;
    opacity: .25;
  }
}
